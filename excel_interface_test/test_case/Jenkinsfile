pipeline{
    agent any  //创建节点
    environment{
        JOBNAME = 'piepline demo'  //仅在Jenkinsfile有效的env
                }
    stages {  //阶段
        stage('build test') { //子阶段
            steps { //步骤
                bat '''pytest -s excel_interface_test/test_case/test_excel_pytest_allure.py --alluredir excel_interface_test/test_case/pytest_results --clean-alluredir --junitxml=excel_interface_test/test_case/outputs/result.xml'''
    // One or more steps need to be included within the steps block.
             
                    }
                }
            }
    post {
         always {
             junit 'excel_interface_test/test_case/outputs/result.xml'  //实现junit.xml
             emailext body: '''<html>
                <head>
                <h1><center><font>Jenkins Auto Sent,DO NOT REPLEY!</font><center></h1>
                <h3><center><font color="red">allure online or allure-report.zip check</font><center></h3>
                </head>
                <body>
                <br>
                <hr>
                <br>
                Pro Des:${JOB_DESCRIPTION}<br>
                <br>
                <hr>
                Pro Name:$PROJECT_NAME<br>
                Pro Num:$BUILD_NUMBER<br>
                Pro Sta:$BUILD_STATUS<br>
                Trigger Casue:${CAUSE}<br>
                Test Total:${TEST_COUNTS,var="pass"}<br>
                Test Pass:${TEST_COUNTS,var="pass"}</font><br>
                Test Fail:<font color="red">${TEST_COUNTS,var="fail"}<br>
                Built Addr:<A HREF="${BUILD_URL}">${BUILD_URL}</A><br>
                log Addr:<A HREF="${BUILD_URL}console">${BUILD_URL}console</A><br>
                allure：<A HREF="${PROJECT_URL}${BUILD_NUMBER}/allure">${PROJECT_URL}${BUILD_NUMBER}/allure</a><br>
                 <hr>
                 ${JELLY_SCRIPT}
                </body>
            </html>''', 
                subject: 'pipeline_demo', 
                to: 'xiaxuno1@163.com'
    // One or more steps need to be included within each condition's block.
                }
               }
}
